/*
 * ServerGUI.java
 *
 * Created on 18.02.2010, 20:01:52
 */

package salssuite.server.gui;

import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.util.LinkedList;
import javax.swing.JPanel;
import salssuite.util.Constants;
import salssuite.server.module.Module;

/**
 * The main Server GUI. This is mainly a frame with a {@link javax.swing.JTabbedPane}
 * inside which provides standard methods to display the GUI of
 * {@link salssuite.server.module.Module}s.
 * <p>
 * Each module can (but needs not) provide a panel which is displayed as a
 * tab of this GUI. To do so, {@link salssuite.server.module.Module#getPanel} must
 * return the panel. Note that the <code>ServerGUI</code> does not provide any
 * security for the server panels in terms of authentication. Therefore the
 * <code>getPanel()</code> method of modules will usually not directly return
 * the module's panel but rather a {@link salssuite.util.gui.PasswordPanel} wrapping the
 * module panel.
 * <p>
 * The server panel is treated the same way as the module panel, but it must
 * be passed when setting up a <code>ServerGUI</code>.
 * <p>
 * The <code>ServerGUI</code> provides a means for the user to log out of
 * all active modules. This means that it replaces all panels which are
 * currently opened with new panels returned by the <code>getPanel()</code>
 * methods of loaded modules.
 * @author Jannis Limperg
 * @see ServerPanel
 */
public class ServerGUI extends javax.swing.JFrame {

    private static final long serialVersionUID=1;

    /**
     * Sole constructor. When left in this state, the <code>ServerGUI</code>
     * displays but the given <code>serverPanel</code>. Module
     * panels can be added using {@link #addModule}.
     * @param serverPanel The server's own panel.
     * @param name The server panel's name which is used as a tab heading.
     * @see ServerPanel
     */
    public ServerGUI(JPanel serverPanel, String name) {
        initComponents();

        this.serverPanel = serverPanel;
        serverPanelName = name;

        //usability
        setLocation(Constants.serverGUINode.getInt("window.x", 200), Constants.serverGUINode.
                getInt("window.y", 200));

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                Constants.serverGUINode.putInt("window.x", getX());
                Constants.serverGUINode.putInt("window.y", getY());
            }
        });

        createTabs();
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoutPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tabPane = new javax.swing.JTabbedPane();

        logoutButton.setText("Logout");

        jLabel1.setText("<html>Das Drücken dieses Knopfes wird alle<p> derzeit geöffneten Module sperren.</html>");

        javax.swing.GroupLayout logoutPanelLayout = new javax.swing.GroupLayout(logoutPanel);
        logoutPanel.setLayout(logoutPanelLayout);
        logoutPanelLayout.setHorizontalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoutPanelLayout.setVerticalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SalSSuite - Server");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        getContentPane().add(tabPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JTabbedPane tabPane;
    // End of variables declaration//GEN-END:variables


    //================================OWN CODE==================================

    //FIELDS

    JPanel serverPanel;
    String serverPanelName;
    
    LinkedList<Module> modules = new LinkedList<Module>();

    //METHODS

    /**
     * Creates tabs for each module in the 'modules' list as well as the server
     * panel and the logout panel.
     */
    private void createTabs() {
        tabPane.removeAll();

        //add server panel
        tabPane.addTab(serverPanelName, serverPanel);

        //add module panels
        for(Module module : modules) {
            if(module.getPanel() != null)
                tabPane.addTab(module.getName(), module.getPanel());
        }

        //add logout panel
        logoutButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTabs();
            }
        });

        JPanel wrapperPanel = new JPanel();
        wrapperPanel.setLayout(new BorderLayout());
        wrapperPanel.add(logoutPanel, BorderLayout.CENTER);
        
        tabPane.addTab("Logout", wrapperPanel);

        pack();
    }

    /**
     * Adds one module panel to the list of module panels.
     * A tab is added to let the user access the module's panel (obtained using
     * {@link salssuite.server.module.Module#getPanel}). Note that module panels should
     * have a preferred size of 750x500px to fit into the server GUI best.
     * @param module The module to be displayed.
     */
    public void addModule(final Module module) {

        if(module == null)
            return;

        modules.add(module);

        createTabs();
    }//end addModule
}

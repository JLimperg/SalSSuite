/*
 * AccountManagingGUI.java
 *
 * Created on 12.12.2010, 04:31:17
 */

/*
 *  SalSSuite - Suite of programmes for managing a SalS project
 *  Copyright (C) 2011  Jannis Limperg <jannis[dot]limperg[at]arcor[dot]de>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.

 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package salssuite.server.gui;

import java.awt.event.WindowAdapter;
import java.sql.Connection;
import java.sql.Statement;
import java.util.prefs.Preferences;
import javax.swing.table.DefaultTableModel;
import salssuite.util.Constants;
import salssuite.server.module.Module;

/**
 * A simple wrapper for an {@link AccountManagingPanel}. This <code>JFrame</code>
 * is intended to behave more like a dialog, therefore it comes without a
 * <code>main()</code> method.
 * @author Jannis Limperg
 * @version 1.0
 * @see salssuite.util.gui.Installer
 */
public class AccountManagingGUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1;

    /**
     * Sole constructor.
     * @param dbcon A connection to the database in which the 'accounts'
     * and 'permissions' tables are located.
     * @param modules A list of module names. The name of a module can be
     * determined using <code>themodule.getName()</code> or
     * <code>themodule.NAME</code>, which should be equivalent.
     * @see salssuite.server.Server#buildServerDatabase
     */
    public AccountManagingGUI(Connection dbcon, String[] modules) {
        initComponents();

        setContentPane(new AccountManagingPanel(dbcon, modules));

        //usability
        final Preferences node = Constants.accountManagingGUINode;

        setLocation(
               node.getInt("window.x", 200),
               node.getInt("window.y", 200)
                );

        setPreferredSize(new java.awt.Dimension(
               node.getInt("window.width", (int)getPreferredSize().getWidth()),
               node.getInt("window.height", (int)getPreferredSize().getHeight())
                ));

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                node.putInt("window.x", (int)getLocation().getX());
                node.putInt("window.y", (int)getLocation().getY());
                node.putInt("window.width", (int)getPreferredSize().getWidth());
                node.putInt("window.height", (int)getPreferredSize().getHeight());
            }
        });
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SalSSuite - Benutzer verwalten");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    //========================================================================//
    //=============================OWN CODE===================================//
    //========================================================================//

    //==============================CONSTANTS=================================//

    //===============================FIELDS===================================//

    Connection dbcon;
    Statement stmt;
    Module[] modules;

    DefaultTableModel tableModel;



    //============================CONSTRUCTORS================================//

    //==============================METHODS===================================//

    //============================INNER CLASSES===============================//
}
